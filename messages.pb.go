// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.26.0
// source: proto/messages.proto

package polycast

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Wireable struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// using protobuf so this message, once sent can be marshalled easily.
	Content   *anypb.Any `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	MessageID []byte     `protobuf:"bytes,2,opt,name=MessageID,proto3" json:"MessageID,omitempty"`
	// used to tell the sender where to send.
	// doesn't need to be sent online.
	Meta          *WireMeta `protobuf:"bytes,3,opt,name=Meta,proto3" json:"Meta,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Wireable) Reset() {
	*x = Wireable{}
	mi := &file_proto_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Wireable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wireable) ProtoMessage() {}

func (x *Wireable) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wireable.ProtoReflect.Descriptor instead.
func (*Wireable) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Wireable) GetContent() *anypb.Any {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Wireable) GetMessageID() []byte {
	if x != nil {
		return x.MessageID
	}
	return nil
}

func (x *Wireable) GetMeta() *WireMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type WireMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsBroadcast   bool                   `protobuf:"varint,1,opt,name=isBroadcast,proto3" json:"isBroadcast,omitempty"` // indicates if this message is a broadcast message.
	Sender        int32                  `protobuf:"varint,2,opt,name=Sender,proto3" json:"Sender,omitempty"`
	Destination   int32                  `protobuf:"varint,3,opt,name=Destination,proto3" json:"Destination,omitempty"` // indicates which peer should receive this message.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WireMeta) Reset() {
	*x = WireMeta{}
	mi := &file_proto_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WireMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireMeta) ProtoMessage() {}

func (x *WireMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireMeta.ProtoReflect.Descriptor instead.
func (*WireMeta) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{1}
}

func (x *WireMeta) GetIsBroadcast() bool {
	if x != nil {
		return x.IsBroadcast
	}
	return false
}

func (x *WireMeta) GetSender() int32 {
	if x != nil {
		return x.Sender
	}
	return 0
}

func (x *WireMeta) GetDestination() int32 {
	if x != nil {
		return x.Destination
	}
	return 0
}

type Polynomial struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coeffs        []uint64               `protobuf:"varint,1,rep,packed,name=coeffs,proto3" json:"coeffs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Polynomial) Reset() {
	*x = Polynomial{}
	mi := &file_proto_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Polynomial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polynomial) ProtoMessage() {}

func (x *Polynomial) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polynomial.ProtoReflect.Descriptor instead.
func (*Polynomial) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{2}
}

func (x *Polynomial) GetCoeffs() []uint64 {
	if x != nil {
		return x.Coeffs
	}
	return nil
}

type Round1Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Each polynomial here is of degree f+1,
	// not encoded, that is: pure data
	// represented as []uint64 instead of bytes.
	RnsPolynomials []*Polynomial `protobuf:"bytes,1,rep,name=rnsPolynomials,proto3" json:"rnsPolynomials,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Round1Message) Reset() {
	*x = Round1Message{}
	mi := &file_proto_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Round1Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round1Message) ProtoMessage() {}

func (x *Round1Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round1Message.ProtoReflect.Descriptor instead.
func (*Round1Message) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Round1Message) GetRnsPolynomials() []*Polynomial {
	if x != nil {
		return x.RnsPolynomials
	}
	return nil
}

// used for inspection of the polynomial by each player.
type Round2Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Challenge     *Challenge             `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Round2Message) Reset() {
	*x = Round2Message{}
	mi := &file_proto_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Round2Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round2Message) ProtoMessage() {}

func (x *Round2Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round2Message.ProtoReflect.Descriptor instead.
func (*Round2Message) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{4}
}

func (x *Round2Message) GetChallenge() *Challenge {
	if x != nil {
		return x.Challenge
	}
	return nil
}

type RNSPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             []uint64               `protobuf:"varint,2,rep,packed,name=v,proto3" json:"v,omitempty"` // the value of the polynomial at a specific x.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RNSPoint) Reset() {
	*x = RNSPoint{}
	mi := &file_proto_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RNSPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RNSPoint) ProtoMessage() {}

func (x *RNSPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RNSPoint.ProtoReflect.Descriptor instead.
func (*RNSPoint) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{5}
}

func (x *RNSPoint) GetV() []uint64 {
	if x != nil {
		return x.V
	}
	return nil
}

// used by the playeres to tell others CHEAPLY what they received from the dealer.
type Challenge struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	RandomX                  *RNSPoint              `protobuf:"bytes,1,opt,name=randomX,proto3" json:"randomX,omitempty"`
	PolynomialValueOfRandomX *RNSPoint              `protobuf:"bytes,2,opt,name=PolynomialValueOfRandomX,proto3" json:"PolynomialValueOfRandomX,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	mi := &file_proto_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{6}
}

func (x *Challenge) GetRandomX() *RNSPoint {
	if x != nil {
		return x.RandomX
	}
	return nil
}

func (x *Challenge) GetPolynomialValueOfRandomX() *RNSPoint {
	if x != nil {
		return x.PolynomialValueOfRandomX
	}
	return nil
}

// this message is used by players that hadn't received the polynomial from the dealer.
// It will help them reconstruct the polynomial.
type Round3Message1 struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SuggestedValue *RNSPoint              `protobuf:"bytes,1,opt,name=suggestedValue,proto3" json:"suggestedValue,omitempty"` // indicates that this player is suggesting this value for another peer's P(i)
	MyValue        *RNSPoint              `protobuf:"bytes,2,opt,name=MyValue,proto3" json:"MyValue,omitempty"`               // States what the sender's value is.
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Round3Message1) Reset() {
	*x = Round3Message1{}
	mi := &file_proto_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Round3Message1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round3Message1) ProtoMessage() {}

func (x *Round3Message1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round3Message1.ProtoReflect.Descriptor instead.
func (*Round3Message1) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{7}
}

func (x *Round3Message1) GetSuggestedValue() *RNSPoint {
	if x != nil {
		return x.SuggestedValue
	}
	return nil
}

func (x *Round3Message1) GetMyValue() *RNSPoint {
	if x != nil {
		return x.MyValue
	}
	return nil
}

// This is a message that arrives eventually from a player that hadn't received the original
// polynomial from the dealer, and managed to catch up with the rest of the players (due to f+1)
// suggested valued received in Round3Message1.
type Round3DelayedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MyValue       *RNSPoint              `protobuf:"bytes,1,opt,name=MyValue,proto3" json:"MyValue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Round3DelayedMessage) Reset() {
	*x = Round3DelayedMessage{}
	mi := &file_proto_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Round3DelayedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Round3DelayedMessage) ProtoMessage() {}

func (x *Round3DelayedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Round3DelayedMessage.ProtoReflect.Descriptor instead.
func (*Round3DelayedMessage) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{8}
}

func (x *Round3DelayedMessage) GetMyValue() *RNSPoint {
	if x != nil {
		return x.MyValue
	}
	return nil
}

var File_proto_messages_proto protoreflect.FileDescriptor

const file_proto_messages_proto_rawDesc = "" +
	"\n" +
	"\x14proto/messages.proto\x12\bpolycast\x1a\x0fproto/any.proto\"\x80\x01\n" +
	"\bWireable\x12.\n" +
	"\acontent\x18\x01 \x01(\v2\x14.google.protobuf.AnyR\acontent\x12\x1c\n" +
	"\tMessageID\x18\x02 \x01(\fR\tMessageID\x12&\n" +
	"\x04Meta\x18\x03 \x01(\v2\x12.polycast.WireMetaR\x04Meta\"f\n" +
	"\bWireMeta\x12 \n" +
	"\visBroadcast\x18\x01 \x01(\bR\visBroadcast\x12\x16\n" +
	"\x06Sender\x18\x02 \x01(\x05R\x06Sender\x12 \n" +
	"\vDestination\x18\x03 \x01(\x05R\vDestination\"$\n" +
	"\n" +
	"Polynomial\x12\x16\n" +
	"\x06coeffs\x18\x01 \x03(\x04R\x06coeffs\"M\n" +
	"\rRound1Message\x12<\n" +
	"\x0ernsPolynomials\x18\x01 \x03(\v2\x14.polycast.PolynomialR\x0ernsPolynomials\"B\n" +
	"\rRound2Message\x121\n" +
	"\tchallenge\x18\x01 \x01(\v2\x13.polycast.ChallengeR\tchallenge\"\x18\n" +
	"\bRNSPoint\x12\f\n" +
	"\x01v\x18\x02 \x03(\x04R\x01v\"\x89\x01\n" +
	"\tChallenge\x12,\n" +
	"\arandomX\x18\x01 \x01(\v2\x12.polycast.RNSPointR\arandomX\x12N\n" +
	"\x18PolynomialValueOfRandomX\x18\x02 \x01(\v2\x12.polycast.RNSPointR\x18PolynomialValueOfRandomX\"z\n" +
	"\x0eRound3Message1\x12:\n" +
	"\x0esuggestedValue\x18\x01 \x01(\v2\x12.polycast.RNSPointR\x0esuggestedValue\x12,\n" +
	"\aMyValue\x18\x02 \x01(\v2\x12.polycast.RNSPointR\aMyValue\"D\n" +
	"\x14Round3DelayedMessage\x12,\n" +
	"\aMyValue\x18\x01 \x01(\v2\x12.polycast.RNSPointR\aMyValueB\x12Z\x10project/polycastb\x06proto3"

var (
	file_proto_messages_proto_rawDescOnce sync.Once
	file_proto_messages_proto_rawDescData []byte
)

func file_proto_messages_proto_rawDescGZIP() []byte {
	file_proto_messages_proto_rawDescOnce.Do(func() {
		file_proto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_messages_proto_rawDesc), len(file_proto_messages_proto_rawDesc)))
	})
	return file_proto_messages_proto_rawDescData
}

var file_proto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_messages_proto_goTypes = []any{
	(*Wireable)(nil),             // 0: polycast.Wireable
	(*WireMeta)(nil),             // 1: polycast.WireMeta
	(*Polynomial)(nil),           // 2: polycast.Polynomial
	(*Round1Message)(nil),        // 3: polycast.Round1Message
	(*Round2Message)(nil),        // 4: polycast.Round2Message
	(*RNSPoint)(nil),             // 5: polycast.RNSPoint
	(*Challenge)(nil),            // 6: polycast.Challenge
	(*Round3Message1)(nil),       // 7: polycast.Round3Message1
	(*Round3DelayedMessage)(nil), // 8: polycast.Round3DelayedMessage
	(*anypb.Any)(nil),            // 9: google.protobuf.Any
}
var file_proto_messages_proto_depIdxs = []int32{
	9, // 0: polycast.Wireable.content:type_name -> google.protobuf.Any
	1, // 1: polycast.Wireable.Meta:type_name -> polycast.WireMeta
	2, // 2: polycast.Round1Message.rnsPolynomials:type_name -> polycast.Polynomial
	6, // 3: polycast.Round2Message.challenge:type_name -> polycast.Challenge
	5, // 4: polycast.Challenge.randomX:type_name -> polycast.RNSPoint
	5, // 5: polycast.Challenge.PolynomialValueOfRandomX:type_name -> polycast.RNSPoint
	5, // 6: polycast.Round3Message1.suggestedValue:type_name -> polycast.RNSPoint
	5, // 7: polycast.Round3Message1.MyValue:type_name -> polycast.RNSPoint
	5, // 8: polycast.Round3DelayedMessage.MyValue:type_name -> polycast.RNSPoint
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_proto_messages_proto_init() }
func file_proto_messages_proto_init() {
	if File_proto_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_messages_proto_rawDesc), len(file_proto_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_messages_proto_goTypes,
		DependencyIndexes: file_proto_messages_proto_depIdxs,
		MessageInfos:      file_proto_messages_proto_msgTypes,
	}.Build()
	File_proto_messages_proto = out.File
	file_proto_messages_proto_goTypes = nil
	file_proto_messages_proto_depIdxs = nil
}
